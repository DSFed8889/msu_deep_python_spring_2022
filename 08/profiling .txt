Memory profiling:
	1) В LRU-cache 7 мест, все из которых заняты ссылками на объект a
	2) Поменяли одну из ссылок на weak ref
	3) Вытеснились все жёсткие ссылки на объект a, поэтому объект удалился
	4) Вытеснили список объектов ObInf, следовательно, освободилась память 21 MiB
	5) Вытеснили список объектов ObInfSlot, который такой же по длинне как и список, упомянутый выше,
	но на этот раз памяти освободилось меньше. Используя слоты, удалось использовать на 5 Mib меньше памяти

Calls profiling:
Всего вызовов 412743. Большинство из них совершены из-за memory_profiler 
	1) Вызвано 2 time.sleep, один на 1 секунду (в set_cache), второй на 2 секунды (в __del__ класса A)
	2) Вызов __del__ продолжительностью в 2 секунды
	3) 1 вызов set_cache продолжительностью 1.368 секунды 1 секунда из которых из-за time.sleep
	4) 1 вызов mem_profile продолжительностью 3.384 секунды 2 секунды из которых из-за time.sleep
	5) 3 вызова get, которые вернули weak ref из кэша
	6) 108 вызовов set
Итог: продолжительность программы 3.427 секунд, 3.384 из которых затратила функция mem_profile, которая вызвала
функцию set_cache затратившую 1.368 секунды.